<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: other | John's Blog]]></title>
  <link href="http://johnkeepmoving.com/blog/categories/other/atom.xml" rel="self"/>
  <link href="http://johnkeepmoving.com/"/>
  <updated>2017-05-13T23:56:48+08:00</updated>
  <id>http://johnkeepmoving.com/</id>
  <author>
    <name><![CDATA[Heng Jiang]]></name>
    <email><![CDATA[jiangheng0511@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[vim recording]]></title>
    <link href="http://johnkeepmoving.com/blog/2015/06/29/vim-recording/"/>
    <updated>2015-06-29T22:04:48+08:00</updated>
    <id>http://johnkeepmoving.com/blog/2015/06/29/vim-recording</id>
    <content type="html"><![CDATA[<p>vim在Normal模式下有recording(录制)的功能,即可以录制一系列操作并回放, 该功能对于一些需要重复操作的场景很有效.</p>

<p>recording功能使用方法如下:</p>

<pre><code>1.在Normal模式下, 按下`qa`, 即start recording, 并将操作序列存与寄存器a中, 此处可以为`qb`, `qc`等.
2.输入相关操作序列
3.输入`q`结束recording.
4.`@a`回放寄存器a中的操作
</code></pre>

<!--more-->


<p>下面以一个例子来具体说明.
文件test中只有一行字符串如下:</p>

<pre><code>1
</code></pre>

<p>指令序列<code>qaYp&lt;C-a&gt;q</code>可以存储这样一个操作, 将当前行的数字拷贝到下一行, 并在新行中增加1</p>

<pre><code>1.`qa`开始录制
2.`Yp`复制当前行并粘贴, 同时光标移动到下一行
3.`&lt;C-a&gt;`将该行的数字增加1
4.`q`停止录制
</code></pre>

<p>当输入上面的一串指令后, <code>@a</code>会回放寄存器a的操作, <code>@@</code>会回放上一次回放,为了多次回放, 可以在@前加入数字来指定回放次数</p>

<p>现在我们在Normal模式下继续输入<code>10@a</code>, 文本变成如下:</p>

<pre><code> 1
 2
 3
 4
 5
 6
 7
 8
 9
 10
 11
</code></pre>

<p>最终生成一个递增序列</p>

<p>如果我们希望等差数列的间隔为2, 则可以输入<code>qbYp&lt;C-a&gt;&lt;C-a&gt;q</code>, 然后输入<code>10@b</code>回放</p>

<pre><code> 1
 2
 3
 4
 5
 6
 7
 8
 9
 10
 11
 13
 15
 17
 19
 21
 23
 25
 27
 29
 31
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[博客域名风波]]></title>
    <link href="http://johnkeepmoving.com/blog/2015/05/13/bo-ke-yu-ming-feng-bo/"/>
    <updated>2015-05-13T22:49:40+08:00</updated>
    <id>http://johnkeepmoving.com/blog/2015/05/13/bo-ke-yu-ming-feng-bo</id>
    <content type="html"><![CDATA[<p>我的博客是基于Octopress搭建的,但是由于一开始不太明白怎么弄,把本地Octopress目录弄得很乱,看着不爽(强迫症&hellip;),于是乎前天想重新搭建一遍.</p>

<p>参考<a href="http://beyondvincent.com/2013/08/03/2013-08-03-108-creating-a-github-blog-using-octopress/">破船大哥</a>的博客,很快就将Octopress部署到了github上(Octopress源码+生成的blog), 这次使用的是bootstrap主题,并且增加了如下功能:</p>

<pre><code>    1.右下角的revolvermaps, 实时显示访问情况.(不好看,也许回头会去掉)
    2.右侧的微薄show, 纯粹好奇玩玩.
    3.快速返回顶部的按钮
</code></pre>

<p>随后, 因为国内线路访问github实在有点慢,而国内良心厂家gitcafe也可以提供类似与github一样的pages服务,所以参考<a href="http://blog.devtang.com/blog/2014/06/02/use-gitcafe-to-host-blog/">唐巧的博客</a>,又将生成的blog也push到了gitcafe一份.</p>

<p>然后, 在配置DNS解析的时候(其实压根就不需要改动), 由于我购买了二级域名johnkeepmoving.com, 所以我将二级域名johnkeepmoving.com, 以及子域名www.johnkeepmoving.com和blog.johnkeepmoving.com都一起指向了gitcafe的服务器.</p>

<p>问题来了, 我发现2个子域名可以正常访问, 而二级域名也可以正常解析(能ping通), 但是http请求会返回404错误. 我一直以为是我gitcafe里page服务的某些配置可能有问题, 所以就不断检查, 可检查得出的结论是跟我之前博客的域名解析一模一样啊.之前(2015过年前)一直都是可以所有域名都正常访问的.</p>

<!--more-->


<p>悲催的我终于脑门开窍, google了关键词&#8221;gitcafe 二级域名失效&#8221;.结果发现人家<a href="http://blog.gitcafe.com/?p=478">gitcafe已经关闭了.com二级域名的访问</a>, 而且刚好是最近才停止的.汗,怪不得可以ping通,但却显示404错误.</p>

<p>解决办法:
    既然gitcafe关闭了.com二级的访问, 那就把二级域名解析到github上就好了,子域名www和blog依然解析到gitcafe.
最后的域名解析方法:</p>

<pre><code>主机记录    记录类型    记录值
@           A           199.27.74.133(github地址)
blog        CNAME       johnkeepmoving.gitcafe.io
www         CNAME       johnkeepmoving.gitcafe.io
</code></pre>

<p><strong>最后总结,</strong></p>

<pre><code>url:                    博客代码所在位置:
johnkeepmoving.com      github
www.johnkeepmoving.com      gitcafe
blog.johnkeepmoving.com     gitcafe
</code></pre>

<p>目前只是硬性对域名进行解析, 将来如果有条件, 可以考虑针对用户的不同链路类型, 配置不同的DNS解析, 最终提升用户体验.</p>

<p>Finish</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用shadowsocks搭建个人VPN]]></title>
    <link href="http://johnkeepmoving.com/blog/2015/02/07/li-yong-shadowsocksda-jian-ge-ren-vpn/"/>
    <updated>2015-02-07T00:23:56+08:00</updated>
    <id>http://johnkeepmoving.com/blog/2015/02/07/li-yong-shadowsocksda-jian-ge-ren-vpn</id>
    <content type="html"><![CDATA[<p>之前一直在用123ssh的vpn, 最近发现他们的服务器不太稳定, Linux下还能连上服务器, windows下直接连接不上.</p>

<p>今天在RamNode上买了一个VPS, 利用shadowsocks搭建了个人VPN, 特此记录下来.</p>

<!--more-->


<h1>shadowsocks和vpn</h1>

<p>shadowsocks 是一个基于socks5协议的代理服务器.
利用shadowsocks搭建VPN的原理就是:</p>

<blockquote><ul>
<li>本地浏览器将http请求发送到本地shadowsocks (sslocal进程会监听本地端口)</li>
<li>sslocal进程将http请求转发给远端的shadowsocks(sssever)</li>
<li>ssserver向internet请求该http请求</li>
<li>请求的数据再依次转发到浏览器</li>
</ul>
</blockquote>

<p>翻墙的原理就是: 找一个美国的服务器!可以直接在ramnode上买vps或者AWS上买个ec2都行, 重点该虚拟机访问外国网站不会被qiang.</p>

<h1>详细步骤:</h1>

<ol>
<li><p>搞定虚拟机.
一定要国外的服务器, 不然怎么fan..我就是在RamNode上买了个最低配的vps.一年流量500G, 才不到100.是不是超值?</p></li>
<li><p>安装shadowsocks</p>

<pre><code> apt-get install python-gevent python-pip
 pip install shadowsocks
</code></pre></li>
<li><p>shadowsocks配置说明</p>

<p>shadowsocks的配置很简单, 其配置文件是json格式的, 可选的字段值含义如下:</p>

<pre><code> server          服务器 IP (IPv4/IPv6)，注意这也将是服务端监听的 IP 地址
 server_port     服务器端口
 local_port      本地端端口
 password        用来加密的密码
 timeout         超时时间（秒）
 method          加密方法，可选择 "bf-cfb", "aes-256-cfb", "des-cfb", "rc4", 等等。默认是一种不安全的加密，推荐用 "aes-256-cfb"
</code></pre></li>
<li><p>配置服务器shadowsocks
在服务器上的/etc/shadowsocks目录下创建 config.json.填入以下内容:</p>

<pre><code> {
     "server":"server_ip",
     "server_port":server_port_num,
     "password":"用来加密的密码",
     "method":"aes-256-cfb"
 }
</code></pre></li>
<li><p>启动服务器服务进程.</p>

<pre><code> /usr/local/bin/ssserver -c /etc/shadowsocks/config.json &gt;
 /etc/shadowsocks/log 2&gt;&amp;1 &amp;
</code></pre>

<p>为了开机启动, 可以把上面那条命令写到 /etc/rc.local</p></li>
<li><p>配置本地shadowsocks
在本地上的/etc/shadowsocks目录下同样创建 config.json, 填入以下内容:</p>

<pre><code> {
     "server":"server_ip",
     "server_port":server_port_num,
     "local_address":"127.0.0.1",
     "local_port":local_port_num,
     "password":"用来加密的密码,同上",
     "passwordtimeout":300,
     "method":"aes-256-cfb",
     "fast_open":false,
     "workers":1
 }
</code></pre></li>
<li><p>启动本地进程</p>

<pre><code> /usr/local/bin/sslocal -c /etc/shadowsocks/config.json &gt; /etc/shadowsocks/log 2&gt;&amp;1 &amp;
</code></pre>

<p>同样, 为了开机启动, 可以把上面那条命令写到 /etc/rc.local</p></li>
<li><p>浏览器设置, 启用ssh代理
我用的chrom浏览器, 安装了拓展SwitchyOmega, 只需要添加一个Profile, 代理协议选socks5, server填127.0.0.1, port填步骤6中的local_port_num</p></li>
<li><p>done!
打开Youtube, 发现1080P都是秒开, 瞬间心情大好啊. 哈哈哈~~</p></li>
</ol>


<p>Finish</p>
]]></content>
  </entry>
  
</feed>
